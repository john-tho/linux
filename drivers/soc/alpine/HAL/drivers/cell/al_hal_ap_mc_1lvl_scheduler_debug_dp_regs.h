/*
 * Copyright 2019, Amazon.com, Inc. or its affiliates. All Rights Reserved
 */

/**
 *  @{
 * @file   al_hal_ap_mc_1lvl_scheduler_debug_dp_regs.h
 *
 * @brief ap_mc_1lvl_scheduler_debug_dp registers
 *
 * This file was auto-generated by RegGen v1.3.13
 *
 * Hash Key is: 0618068b3350418412f0baea36697d14
 *
 * JSON: ap_mc_1lvl_scheduler_dp_debug_regs.json
 *
 */

#ifndef __AL_HAL_AP_MC_1LVL_SCHEDULER_DEBUG_DP_REGS_H__
#define __AL_HAL_AP_MC_1LVL_SCHEDULER_DEBUG_DP_REGS_H__

#include "al_hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif

/**************************************************************************************************
 * al_ap_mc_1lvl_scheduler_debug_dp_general
 *
 * General Debug registers
 **************************************************************************************************/
struct al_ap_mc_1lvl_scheduler_debug_dp_general {
	/* [0x0] General Debug registers */
	uint32_t mode_indications;
};

/**** mode_indications register ****/
/*
 * client grant is sp
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_ARB_SP (1 << 29)
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_ARB_SP_MASK 0x20000000
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_ARB_SP_SHIFT 29
/*
 * lient grant is from parked mode
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_ARB_PARK_MODE (1 << 30)
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_ARB_PARK_MODE_MASK 0x40000000
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_ARB_PARK_MODE_SHIFT 30
/*
 * client grant is valid
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_VALID (1 << 31)
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_VALID_MASK 0x80000000
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_GENERAL_MODE_INDICATIONS_GRANT_VALID_SHIFT 31

/**************************************************************************************************
 * al_ap_mc_1lvl_scheduler_debug_dp_rate_limiter
 *
 * Rate limiter debug registers
 **************************************************************************************************/
struct al_ap_mc_1lvl_scheduler_debug_dp_rate_limiter {
	/* [0x0] */
	uint32_t rate_limiter_regs;
};

/**** rate_limiter_regs register ****/
/*
 * Client token bucket value for debug read
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_RATE_LIMITER_RATE_LIMITER_REGS_RTLMT_TB_DOUT_VEC_MASK 0x0000FFFF
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_RATE_LIMITER_RATE_LIMITER_REGS_RTLMT_TB_DOUT_VEC_SHIFT 0
/*
 * Eligible in RL
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_RATE_LIMITER_RATE_LIMITER_REGS_RTLMT_ELIG_VEC (1 << 31)
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_RATE_LIMITER_RATE_LIMITER_REGS_RTLMT_ELIG_VEC_MASK 0x80000000
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_RATE_LIMITER_RATE_LIMITER_REGS_RTLMT_ELIG_VEC_SHIFT 31

/**************************************************************************************************
 * al_ap_mc_1lvl_scheduler_debug_dp_dwrr
 *
 * DWRR debug registers
 **************************************************************************************************/
struct al_ap_mc_1lvl_scheduler_debug_dp_dwrr {
	/* [0x0] */
	uint32_t dwrr_debug_regs;
};

/**** dwrr_debug_regs register ****/
/*
 * Client credit for debug
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_DWRRA_CREDIT_DOUT_VEC_MASK 0x0000FFFF
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_DWRRA_CREDIT_DOUT_VEC_SHIFT 0
/*
 * who is not the round anymore
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_DWRRA_NOT_IN_ROUND_VEC (1 << 28)
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_DWRRA_NOT_IN_ROUND_VEC_MASK 0x10000000
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_DWRRA_NOT_IN_ROUND_VEC_SHIFT 28
/*
 * parked client grant 1hot vec, indicating where the arbiter is parked
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_GRANT_PARK_NOT_QUAL_1HOT_VEC (1 << 29)
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_GRANT_PARK_NOT_QUAL_1HOT_VEC_MASK 0x20000000
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_GRANT_PARK_NOT_QUAL_1HOT_VEC_SHIFT 29
/*
 * Client grant 1hot vec non qualified
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_GRANT_NOT_QUAL_1HOT_VEC (1 << 30)
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_GRANT_NOT_QUAL_1HOT_VEC_MASK 0x40000000
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_GRANT_NOT_QUAL_1HOT_VEC_SHIFT 30
/*
 * Clients eligibility vector for debug
 * Reset: 0x0         Access: RO
 */
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_DWRRA_ELIG_VEC (1 << 31)
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_DWRRA_ELIG_VEC_MASK 0x80000000
#define AP_MC_1LVL_SCHEDULER_DEBUG_DP_DWRR_DWRR_DEBUG_REGS_DWRRA_ELIG_VEC_SHIFT 31

/**************************************************************************************************
 * al_ap_mc_1lvl_scheduler_debug_dp_regs
 **************************************************************************************************/
struct al_ap_mc_1lvl_scheduler_debug_dp_regs {
	/* [0x0] General Debug registers */
	struct al_ap_mc_1lvl_scheduler_debug_dp_general general;
	/* [0x4] Rate limiter debug registers */
	struct al_ap_mc_1lvl_scheduler_debug_dp_rate_limiter rate_limiter[5];
	/* [0x18] DWRR debug registers */
	struct al_ap_mc_1lvl_scheduler_debug_dp_dwrr dwrr[5];
};

#ifdef __cplusplus
}
#endif

#endif

/** @} */
