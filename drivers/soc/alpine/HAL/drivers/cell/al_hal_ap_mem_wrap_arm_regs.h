/*
 * Copyright 2019, Amazon.com, Inc. or its affiliates. All Rights Reserved
 */

/**
 *  @{
 * @file   al_hal_ap_mem_wrap_arm_regs.h
 *
 * @brief ap_mem_wrap_arm registers
 *
 * This file was auto-generated by RegGen v1.3.13
 *
 * Hash Key is: db0c9af4020f97bf636bcd5cc52cdf15
 *
 * JSON: AP_MEM_WRAP_ARM.json
 *
 */

#ifndef __AL_HAL_AP_MEM_WRAP_ARM_REGS_H__
#define __AL_HAL_AP_MEM_WRAP_ARM_REGS_H__

#include "al_hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif

/**************************************************************************************************
 * al_ap_mem_wrap_arm_regs
 *
 * anpa_mem_wrap_regs
 **************************************************************************************************/
struct al_ap_mem_wrap_arm_regs {
	/* [0x0] memory info */
	uint32_t info;
	/* [0x4] memory configuration */
	uint32_t cfg;
	/* [0x8] memory status */
	uint32_t status;
	/* [0xc] single error detection */
	uint32_t single_err_counter;
	/* [0x10] single error threshold */
	uint32_t single_err_threshold;
	/* [0x14] double error detection */
	uint32_t double_err_counter;
	/* [0x18] double error threshold */
	uint32_t double_err_threshold;
	/* [0x1c] */
	uint32_t rsrvd_0;
};

/**** info register ****/
/*
 * Shut_Down
 * Reset: 0x0         Access: RO, RreturnsRst
 */
#define AP_MEM_WRAP_ARM_INFO_SD_EN       (1 << 0)
#define AP_MEM_WRAP_ARM_INFO_SD_EN_MASK  0x00000001
#define AP_MEM_WRAP_ARM_INFO_SD_EN_SHIFT 0
/*
 * Initialization
 * Reset: 0x0         Access: RO, RreturnsRst
 */
#define AP_MEM_WRAP_ARM_INFO_INIT_EN     (1 << 1)
#define AP_MEM_WRAP_ARM_INFO_INIT_EN_MASK 0x00000002
#define AP_MEM_WRAP_ARM_INFO_INIT_EN_SHIFT 1
/*
 * Single_Error_Detection
 * Reset: 0x0         Access: RO, RreturnsRst
 */
#define AP_MEM_WRAP_ARM_INFO_SED_EN      (1 << 2)
#define AP_MEM_WRAP_ARM_INFO_SED_EN_MASK 0x00000004
#define AP_MEM_WRAP_ARM_INFO_SED_EN_SHIFT 2
/*
 * Double_Error_Detection
 * Reset: 0x0         Access: RO, RreturnsRst
 */
#define AP_MEM_WRAP_ARM_INFO_DED_EN      (1 << 3)
#define AP_MEM_WRAP_ARM_INFO_DED_EN_MASK 0x00000008
#define AP_MEM_WRAP_ARM_INFO_DED_EN_SHIFT 3
/*
 * Single_Error_Correction
 * Reset: 0x0         Access: RO, RreturnsRst
 */
#define AP_MEM_WRAP_ARM_INFO_SEC_EN      (1 << 4)
#define AP_MEM_WRAP_ARM_INFO_SEC_EN_MASK 0x00000010
#define AP_MEM_WRAP_ARM_INFO_SEC_EN_SHIFT 4
/*
 * Force_Error_Detection
 * Reset: 0x0         Access: RO, RreturnsRst
 */
#define AP_MEM_WRAP_ARM_INFO_FED_EN      (1 << 5)
#define AP_MEM_WRAP_ARM_INFO_FED_EN_MASK 0x00000020
#define AP_MEM_WRAP_ARM_INFO_FED_EN_SHIFT 5
/*
 * Write_Mask
 * Reset: 0x0         Access: RO, RreturnsRst
 */
#define AP_MEM_WRAP_ARM_INFO_WM_EN       (1 << 6)
#define AP_MEM_WRAP_ARM_INFO_WM_EN_MASK  0x00000040
#define AP_MEM_WRAP_ARM_INFO_WM_EN_SHIFT 6

/**** cfg register ****/
/*
 * Shut Down
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_SD           (1 << 0)
#define AP_MEM_WRAP_ARM_CFG_SD_MASK      0x00000001
#define AP_MEM_WRAP_ARM_CFG_SD_SHIFT     0
/*
 * initialization trigger
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_INIT_TRIG    (1 << 1)
#define AP_MEM_WRAP_ARM_CFG_INIT_TRIG_MASK 0x00000002
#define AP_MEM_WRAP_ARM_CFG_INIT_TRIG_SHIFT 1
/* Reset: 0x0         Access: RW */
#define AP_MEM_WRAP_ARM_CFG_RET          (1 << 2)
#define AP_MEM_WRAP_ARM_CFG_RET_MASK     0x00000004
#define AP_MEM_WRAP_ARM_CFG_RET_SHIFT    2
/* Reset: 0x0         Access: RW */
#define AP_MEM_WRAP_ARM_CFG_QNAP         (1 << 3)
#define AP_MEM_WRAP_ARM_CFG_QNAP_MASK    0x00000008
#define AP_MEM_WRAP_ARM_CFG_QNAP_SHIFT   3
/*
 * Single Error Injection
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_SEI          (1 << 4)
#define AP_MEM_WRAP_ARM_CFG_SEI_MASK     0x00000010
#define AP_MEM_WRAP_ARM_CFG_SEI_SHIFT    4
/*
 * Double Error Injection
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_DEI          (1 << 5)
#define AP_MEM_WRAP_ARM_CFG_DEI_MASK     0x00000020
#define AP_MEM_WRAP_ARM_CFG_DEI_SHIFT    5
/*
 * Force Error Detection
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_FED          (1 << 6)
#define AP_MEM_WRAP_ARM_CFG_FED_MASK     0x00000040
#define AP_MEM_WRAP_ARM_CFG_FED_SHIFT    6
/*
 * ECC Bypass
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_ECC_BYPASS   (1 << 7)
#define AP_MEM_WRAP_ARM_CFG_ECC_BYPASS_MASK 0x00000080
#define AP_MEM_WRAP_ARM_CFG_ECC_BYPASS_SHIFT 7
/*
 * Reserved
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_RSRVD_SMS_MASK 0x0000FF00
#define AP_MEM_WRAP_ARM_CFG_RSRVD_SMS_SHIFT 8
/*
 * Read Margin Enable
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_EMA_MASK     0x00070000
#define AP_MEM_WRAP_ARM_CFG_EMA_SHIFT    16
/*
 * Read Margin
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_EMAS         (1 << 19)
#define AP_MEM_WRAP_ARM_CFG_EMAS_MASK    0x00080000
#define AP_MEM_WRAP_ARM_CFG_EMAS_SHIFT   19
/*
 * Read Margin Enable PortB
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_EMAW_MASK    0x00300000
#define AP_MEM_WRAP_ARM_CFG_EMAW_SHIFT   20
/*
 * Read Margin PortB
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_EMEB_MASK    0x01C00000
#define AP_MEM_WRAP_ARM_CFG_EMEB_SHIFT   22
/*
 * TEST1
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_EMAP         (1 << 25)
#define AP_MEM_WRAP_ARM_CFG_EMAP_MASK    0x02000000
#define AP_MEM_WRAP_ARM_CFG_EMAP_SHIFT   25
/*
 * TEST Read_Write Margin
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_CFG_RDT          (1 << 26)
#define AP_MEM_WRAP_ARM_CFG_RDT_MASK     0x04000000
#define AP_MEM_WRAP_ARM_CFG_RDT_SHIFT    26
/* Reset: 0x0         Access: RW */
#define AP_MEM_WRAP_ARM_CFG_STOV         (1 << 27)
#define AP_MEM_WRAP_ARM_CFG_STOV_MASK    0x08000000
#define AP_MEM_WRAP_ARM_CFG_STOV_SHIFT   27
/* Reset: 0x0         Access: RW */
#define AP_MEM_WRAP_ARM_CFG_RSRVD_ECC_MASK 0x30000000
#define AP_MEM_WRAP_ARM_CFG_RSRVD_ECC_SHIFT 28
/* Reset: 0x0         Access: RW */
#define AP_MEM_WRAP_ARM_CFG_RSRVD_MEM_MASK 0xC0000000
#define AP_MEM_WRAP_ARM_CFG_RSRVD_MEM_SHIFT 30

/**** status register ****/
/*
 * Ready for Operation
 * Reset: 0x0         Access: RO
 */
#define AP_MEM_WRAP_ARM_STATUS_ROP       (1 << 0)
#define AP_MEM_WRAP_ARM_STATUS_ROP_MASK  0x00000001
#define AP_MEM_WRAP_ARM_STATUS_ROP_SHIFT 0
/*
 * Init In Progress
 * Reset: 0x0         Access: RO
 */
#define AP_MEM_WRAP_ARM_STATUS_INIT_IN_PROGRESS (1 << 1)
#define AP_MEM_WRAP_ARM_STATUS_INIT_IN_PROGRESS_MASK 0x00000002
#define AP_MEM_WRAP_ARM_STATUS_INIT_IN_PROGRESS_SHIFT 1
/* Reset: 0x0         Access: RO */
#define AP_MEM_WRAP_ARM_STATUS_RSRVD_MEM_MASK 0x000000FC
#define AP_MEM_WRAP_ARM_STATUS_RSRVD_MEM_SHIFT 2
/*
 * Soft Error Detection
 * Reset: 0x0         Access: RO
 */
#define AP_MEM_WRAP_ARM_STATUS_READ_ERR  (1 << 8)
#define AP_MEM_WRAP_ARM_STATUS_READ_ERR_MASK 0x00000100
#define AP_MEM_WRAP_ARM_STATUS_READ_ERR_SHIFT 8
/* Reset: 0x0         Access: RO */
#define AP_MEM_WRAP_ARM_STATUS_RSRVD_ECC (1 << 9)
#define AP_MEM_WRAP_ARM_STATUS_RSRVD_ECC_MASK 0x00000200
#define AP_MEM_WRAP_ARM_STATUS_RSRVD_ECC_SHIFT 9
/*
 * Address Fail
 * Reset: 0x0         Access: RO
 */
#define AP_MEM_WRAP_ARM_STATUS_ADDR_FAIL_MASK 0xFFFF0000
#define AP_MEM_WRAP_ARM_STATUS_ADDR_FAIL_SHIFT 16

/**** single_err_counter register ****/
/*
 * single_error_counter
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_SINGLE_ERR_COUNTER_CNT_VAL_MASK 0xFFFFFFFF
#define AP_MEM_WRAP_ARM_SINGLE_ERR_COUNTER_CNT_VAL_SHIFT 0

/**** single_err_threshold register ****/
/*
 * single_error_threshold
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_SINGLE_ERR_THRESHOLD_THD_VAL_MASK 0xFFFFFFFF
#define AP_MEM_WRAP_ARM_SINGLE_ERR_THRESHOLD_THD_VAL_SHIFT 0

/**** double_err_counter register ****/
/*
 * double_error_counter
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_DOUBLE_ERR_COUNTER_CNT_VAL_MASK 0xFFFFFFFF
#define AP_MEM_WRAP_ARM_DOUBLE_ERR_COUNTER_CNT_VAL_SHIFT 0

/**** double_err_threshold register ****/
/*
 * double_error_threshold
 * Reset: 0x0         Access: RW
 */
#define AP_MEM_WRAP_ARM_DOUBLE_ERR_THRESHOLD_THD_VAL_MASK 0xFFFFFFFF
#define AP_MEM_WRAP_ARM_DOUBLE_ERR_THRESHOLD_THD_VAL_SHIFT 0

#ifdef __cplusplus
}
#endif

#endif

/** @} */
