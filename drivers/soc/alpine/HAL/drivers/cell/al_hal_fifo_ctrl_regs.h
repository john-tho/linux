/*
 * Copyright 2019, Amazon.com, Inc. or its affiliates. All Rights Reserved
 */

/**
 *  @{
 * @file   al_hal_fifo_ctrl_regs.h
 *
 * @brief fifo_ctrl registers
 *
 * This file was auto-generated by RegGen v1.3.13
 *
 * Hash Key is: 3ce025b090678cc4a60fff8ef3aa3af0
 *
 * JSON: AP_FIFO_CTRL_BASE.json
 *
 */

#ifndef __AL_HAL_FIFO_CTRL_REGS_H__
#define __AL_HAL_FIFO_CTRL_REGS_H__

#include "al_hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif

/**************************************************************************************************
 * al_fifo_ctrl_regs
 **************************************************************************************************/
struct al_fifo_ctrl_regs {
	/* [0x0] FIFO General configurations */
	uint32_t fifo_cfg;
	/* [0x4] Exposing FIFO size */
	uint32_t size;
	/* [0x8] Interrupts indications */
	uint32_t interrupts;
	/* [0xc] */
	uint32_t rsrvd_0;
};

/**** fifo_cfg register ****/
/*
 * FIFO depth (allocated memory size within the addr space)
 * Reset: 0x1         Access: RW
 */
#define FIFO_CTRL_FIFO_CFG_DEPTH_MASK    0x0001FFFF
#define FIFO_CTRL_FIFO_CFG_DEPTH_SHIFT   0
/*
 * activating clear mode
 * Reset: 0x0         Access: RW
 */
#define FIFO_CTRL_FIFO_CFG_CLEAR         (1 << 31)
#define FIFO_CTRL_FIFO_CFG_CLEAR_MASK    0x80000000
#define FIFO_CTRL_FIFO_CFG_CLEAR_SHIFT   31

/**** size register ****/
/*
 * FIFO size expose
 * Reset: 0x0         Access: RO
 */
#define FIFO_CTRL_SIZE_SIZE_MASK         0x0001FFFF
#define FIFO_CTRL_SIZE_SIZE_SHIFT        0

/**** interrupts register ****/
/*
 * Pop when FIFO is empty
 * Reset: 0x0         Access: RO
 */
#define FIFO_CTRL_INTERRUPTS_UNDERRUN    (1 << 30)
#define FIFO_CTRL_INTERRUPTS_UNDERRUN_MASK 0x40000000
#define FIFO_CTRL_INTERRUPTS_UNDERRUN_SHIFT 30
/*
 * Push when FIFO is full
 * Reset: 0x0         Access: RO
 */
#define FIFO_CTRL_INTERRUPTS_OVERFLOW    (1 << 31)
#define FIFO_CTRL_INTERRUPTS_OVERFLOW_MASK 0x80000000
#define FIFO_CTRL_INTERRUPTS_OVERFLOW_SHIFT 31

#ifdef __cplusplus
}
#endif

#endif

/** @} */
