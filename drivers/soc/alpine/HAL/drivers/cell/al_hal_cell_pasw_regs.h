/*
 * Copyright 2019, Amazon.com, Inc. or its affiliates. All Rights Reserved
 */

/**
 *  @{
 * @file   al_hal_cell_pasw_regs.h
 *
 * @brief cell_pasw registers
 *
 * This file was auto-generated by RegGen v1.3.13
 *
 * Hash Key is: be2fe723e0f5d5c0dd1089c08fe7ded7
 *
 * JSON: AP_MEM_BAR_DECODE.json
 *
 */

#ifndef __AL_HAL_CELL_PASW_REGS_H__
#define __AL_HAL_CELL_PASW_REGS_H__

#include "al_hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif

/**************************************************************************************************
 * al_cell_pasw_regs
 **************************************************************************************************/
struct al_cell_pasw_regs {
	/* [0x0] */
	uint32_t low;
	/* [0x4] */
	uint32_t high;
};

/**** low register ****/
/*
 * Bar size is defined by 2^(MIN_BAR_SIZE_LOG2 + size - 1).
 * Size of 0 disables the bar.
 * Reset: 0x0         Access: RW
 */
#define CELL_PASW_LOW_SIZE_MASK          0x0000003F
#define CELL_PASW_LOW_SIZE_SHIFT         0
/*
 * Sub target ID, propagating as-is out of the module
 * Reset: 0x0         Access: RW
 */
#define CELL_PASW_LOW_SUB_TARGET_ID_MASK 0x00000F00
#define CELL_PASW_LOW_SUB_TARGET_ID_SHIFT 8
/*
 * Target ID, propagating as-is out of the module
 * Reset: 0x0         Access: RW
 */
#define CELL_PASW_LOW_TARGET_ID_MASK     0x0000F000
#define CELL_PASW_LOW_TARGET_ID_SHIFT    12
/*
 * Bar address, bits [31:16] (minimal supported bar size is 64KB).
 * These bits are relevant only in case of MIN_BAR_SIZE_LOG2 < 32.
 * Reset: 0x0         Access: RW
 */
#define CELL_PASW_LOW_BASE_LOW_MASK      0xFFFF0000
#define CELL_PASW_LOW_BASE_LOW_SHIFT     16

/**** high register ****/
/*
 * Bar address, bits [47:32].
 * These bits are relevant only in case of ADDR_WIDTH > 32.
 * Only the bits above the PASW size are checked, rest are masked.
 * Reset: 0x0         Access: RW
 */
#define CELL_PASW_HIGH_BASE_HIGH_MASK    0x0000FFFF
#define CELL_PASW_HIGH_BASE_HIGH_SHIFT   0
/*
 * When this bit is set entire register (low and high) is locked and cannot be written until reset
 * Reset: 0x0         Access: RW
 */
#define CELL_PASW_HIGH_WRITE_PROTECT     (1 << 16)
#define CELL_PASW_HIGH_WRITE_PROTECT_MASK 0x00010000
#define CELL_PASW_HIGH_WRITE_PROTECT_SHIFT 16
/*
 * Indicates this bar is used to exclude an address range.
 * If address match this bar, it would be treated as if not hitting any PASW
 * Reset: 0x0         Access: RW
 */
#define CELL_PASW_HIGH_EXCLUDE           (1 << 17)
#define CELL_PASW_HIGH_EXCLUDE_MASK      0x00020000
#define CELL_PASW_HIGH_EXCLUDE_SHIFT     17

#ifdef __cplusplus
}
#endif

#endif

/** @} */
